/*Задача 19: Напишите программу, которая принимает на вход пятизначное число и проверяет, является ли оно палиндромом.
14212 -> нет
12821 -> да
23432 -> да
*/
// Алгаритм действий:
// 1) ввод данных
// 2) создание переменной , для хранения првильного число
// 3) проверка на 5значность и int 
// 4) наполнение массива 
// 5) проверка на полиндром
// тело программы

/*

(1)     
        Создали переменную;
 
(2)      
        Cоздаем переменную в которой будем хранить результат функции - является ли число 5тизначным и вообще число ли это* 
(3)
        Дальше мы пойти не можем... у нас нет ни чисел, ни массива, ни функуций.. Этим и займемся! Напишем функцию, которая будет проверять нашу строку(string)
        на то что эта строка из 5 символов, а также что в ней число, а не любые 5 символов
        Назавем нашу функуцию "Is FifeNumber"
        Так как в этой функции мы проверяем является ли число(данные) тем или иным(в нашем случае проверка на число и пятизначность),
        то и результатом нашей функции будет либо TRUE or FILSE
        Принимаемый аргумент string number( что то же мы должны проверять))
        Первая проверка на 5ти значность.. почему через Length? так можно.. строка и есть массив если не замарачиваться..
        Если длина строки/массива меньше 5 , тогда ввод неверный, функция вернет FILSE
    
        * А вот тут реально интерестно! примерно я понимаю за что отвечает строчка, но до конца не осознал.. Короче она проверяте - не затисались - ли, помимо цыфр ,
        другие символы например : 13м*9 - проверка на это.. но сложная бляха.
        Если отрицание INT от строки number(ты типо сам разберись какой тип данный и верни его, поидеи), но главное отрицание Int , выполняется - снова FILSE
        И только если эти оба условия не выполнятся - наша функция IsFifeNumber вернет нам TRUE 

(4)      
        Создаем новую функцию для наполнения массива, элементы нашей строки, заносим в первый элемент массива, 1в1 , 2 в 2 и тд..
        return array, он же был пустой , вот мы его и наполнили. 

(5)     
        Проверка на полиндром. Снова буливая функция (true/filse) bool CheckPolindrom(int [] array), где аргументом будем наш недавно созданный и наполненный массив
        цикл for , но не совсем обычный.. забигая вперед, можно сразу понять что проверка будет "затянутой " сравнивать предется по 2 раза! значит меняем for
        for(int i  = 0; i < (array.Length - 1)/2; i++) - для того чтобы сравнение было только по 1му разу : 48584
        4     4
        8     8   
           5                   ну и зачем идти дальше ? тратить ресурсы



(Тело программы)
        если , число коректное(означает что действительно число , действительно из 5тя цыфр, за это отвечает функция IsFifeNumber → создаем массив,
        в который заносим результат функции FillArray(аргумент number) → после чего объявляем еще одну переменную , которая будет возвращать булевый тип
        присваеваем этой переменной результат функции CheckPolindrom(array)
        После чего последняя проверка , если (isPolindrom) → все ок, если нет то нет.



*/

string number = Console.ReadLine();                         // 1) создали переменную для дальнейшей работы(откуда будут вводиться данные, в нашем случае ввод с терминала);
bool IsCorectNumber = IsFifeNumber(number);                 // 2) создаем переменную в которой будем хранить результат функции - является ли число 5тизначным и вообще число ли это* 

// тело программы
if(IsCorectNumber)                            
{
    int [] array =  FillArray(number);                       // дальше нам нужно работать с массивами, создаем его из функции которая принимает аргумент строку number
    bool isPolindrom = CheckPolindrom(array);
    if(isPolindrom)
    {
        Console.WriteLine("Число -  полиндром");
    
    }
    else 
    {
        Console.WriteLine("Число не является полиндромом");
    }
}  
else
{
    Console.WriteLine("Пожалуйста перезапустите программу и повторите ввод");
}
// (3) проверка на 5тизначность
bool IsFifeNumber(string number)             
{
    if(number.Length  != 5)
    {
        Console.WriteLine("!!! Колличество символов не равно 5 !!!");
        return false;
    }
    if(!int.TryParse(number, out var q))                                             // отвечает за то , чтобы не было ошибок при вводе символов не являющиеся числами,
                                                                                     // более того Parse сам по себе не тащит, только TryParse
    {
        Console.WriteLine("!!! Указанные вами данные не являются числом !!!");
        return false;
    }
    return true;
}

// (4) создаем массив, который будет являться, результатом функции, после обработки строки number 
int[] FillArray(string number)
{
    int[] array = new int[5];                                 // аргумент в квадратных скобках - это размер массива, а "new" выдялить память под массив.... целочисленных чисел
    for(int i  = 0; i < number.Length; i++)
    {
        //array[i] = number[i]
        array[i] = (int)Char.GetNumericValue(number[i]);     // (int)Char.GetNumericValue()- функция библиотеки которая конвертирует элемент строки (тип данный char) , В элемент int овый
    }
    return array;
}

// (5) проверка на полиндром
bool CheckPolindrom(int[] array)
{
    for(int i  = 0; i < (array.Length - 1)/2; i++)
    {
        int lastIndex = array.Length - i -1;
        if(array [i] != (array[lastIndex]))                  // не изменяем массив (убираем кра йнее правое ) а сравниваем 1 с последним и ....
            return false;
    }
    return true;
}

